apiVersion: "v1"
kind: "Template"
metadata:
  name: logging-fluentd-template
  annotations:
    description: "Template for logging fluentd deployment."
    tags: "infrastructure"
  labels:
    logging-infra: fluentd
labels:
  logging-infra: fluentd
  provider: openshift
  component: fluentd

parameters:
-
  description: "The image prefix for the Fluentd image to use"
  name: IMAGE_PREFIX
  value: "caruccio/origin-"
-
  description: "The image version for the Fluentd image to use"
  name: IMAGE_VERSION
  value: latest
-
  description: "Internal url for reaching the master API to query pod labels"
  name: MASTER_URL
  value: "https://kubernetes.default.svc.cluster.local"
-
  description: "Azure StorageAccount name to write logs"
  name: AZURE_STORAGE_ACCOUNT_NAME
-
  description: "Azure StorageAccount key to write logs"
  name: AZURE_STORAGE_ACCOUNT_KEY
-
  description: "Azure Container name to write logs"
  name: AZURE_STORAGE_ACCOUNT_CONTAINER
  value: "logs"
-
  description: "Use the journal as input for system logs"
  name: USE_JOURNAL
  value: "false"
-
  description: 'The journal source to use when USE_JOURNAL=true'
  name: JOURNAL_SOURCE
  value: ""
-
  description: 'Read the journal starting from the very beginning (false|true).'
  name: JOURNAL_READ_FROM_HEAD
  value: "false"

objects:
- apiVersion: extensions/v1beta1
  kind: "DaemonSet"
  metadata:
    name: "logging-fluentd"
    labels:
      provider: openshift
      component: "fluentd"
  spec:
    selector:
      matchLabels:
        provider: openshift
        component: "fluentd"
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        minReadySeconds: 600
    template:
      metadata:
        name: fluentd-elasticsearch
        labels:
          provider: openshift
          component: "fluentd"
      spec:
        terminationGracePeriodSeconds: 300
        serviceAccountName: aggregated-logging-fluentd
        containers:
        - name: fluentd-elasticsearch
          image: ${IMAGE_PREFIX}logging-fluentd:${IMAGE_VERSION}
          imagePullPolicy: Always
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
          volumeMounts:
          - name: runlogjournal
            mountPath: /run/log/journal
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: config
            mountPath: /etc/fluent/configs.d/user
            readOnly: true
#          - name: certs
#            mountPath: /etc/fluent/keys
#            readOnly: true
          - name: dockerhostname
            mountPath: /etc/docker-hostname
            readOnly: true
          - name: localtime
            mountPath: /etc/localtime
            readOnly: true
          - name: dockercfg
            mountPath: /etc/sysconfig/docker
            readOnly: true
          env:
          - name: "K8S_HOST_URL"
            value: ${MASTER_URL}
          - name: "AZURE_STORAGE_ACCOUNT_NAME"
            value: ${AZURE_STORAGE_ACCOUNT_NAME}
          - name: "AZURE_STORAGE_ACCOUNT_KEY"
            value: ${AZURE_STORAGE_ACCOUNT_KEY}
          - name: "AZURE_STORAGE_ACCOUNT_CONTAINER"
            value: ${AZURE_STORAGE_ACCOUNT_CONTAINER}
          - name: "USE_JOURNAL"
            value: ${USE_JOURNAL}
          - name: "JOURNAL_SOURCE"
            value: ${JOURNAL_SOURCE}
          - name: "JOURNAL_READ_FROM_HEAD"
            value: ${JOURNAL_READ_FROM_HEAD}
        volumes:
        - name: runlogjournal
          hostPath:
            path: /run/log/journal
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: config
          configMap:
            name: logging-fluentd
        #- name: certs
        #  secret:
        #    secretName: logging-fluentd
        - name: dockerhostname
          hostPath:
            path: /etc/hostname
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: dockercfg
          hostPath:
            path: /etc/sysconfig/docker
